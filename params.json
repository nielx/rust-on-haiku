{"name":"Rust-on-haiku","tagline":"Everything about using the Rust programming language on Haiku","body":"# Welcome to Rust for Haiku\r\nI have worked on a port of [Rust](http://rust-lang.org) to the [Haiku](http://www.haiku-os.org) operating system. Rust is a fast and safe programming language. And Haiku is an open source operating system that targets desktop computers.\r\n\r\n# Notes about porting\r\nThis is the nerdy stuff, so if you just want to install the rust compiler, please skip this.  \r\n\r\n## What you should know in advance\r\nThe rust compiler (rustc) is written in rust. That means that it requires a prebuilt rust compiler to compile the source. This means that in case you want to port Rust to another platform, you will always have to start off by creating an initial (or: stage0) compiler for the new platform. \r\n\r\nThe basic steps are:\r\n1. On the supported build platform, create a cross-compiler that can generate binaries for the Haiku platform.\r\n2. Using this cross-compiler, create a native compiler for Haiku.\r\n\r\nIn my case the host platform was Mac OS X Yosemite, but it should work on any platform that supports building Rust and building Haiku.\r\n\r\nThis brings me to another thing... cross-compiling is a bit of a maze. Now I built for Haiku, which has excellent support for [cross-compiling](https://www.haiku-os.org/guides/building) the whole OS on platforms like Mac OS X, Linux and FreeBSD. That means that a GCC cross-compiler is built, as well as important libraries and glue code that is needed to create native binaries.\r\n\r\n> NOTE: it is absolutely important that you understand that the target platform is itself cross compilable. You cannot cross-compile in a vacuum.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}